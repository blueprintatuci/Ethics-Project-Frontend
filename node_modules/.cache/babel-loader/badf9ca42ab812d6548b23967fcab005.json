{"ast":null,"code":"var _jsxFileName = \"/Users/ainakin/Desktop/BLUEPRINT-ETHICS/Ethics-Project/frontend/src/Navbar.js\";\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\nimport { animateScroll as scroll } from \"react-scroll\";\nimport ethic_logo from \"./assets/ethic_logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport \"./navbar.scss\";\nconst useStyles = makeStyles({\n  navbar: {\n    backgroundColor: \"white\"\n  },\n  hidden: {\n    display: \"none\"\n  }\n});\n\nfunction scrollToTop() {\n  scroll.scrollToTop();\n}\n\nexport default function Navbar() {\n  const [hideOnScroll, setHideOnScroll] = useState(true);\n  useScrollPosition(({\n    currPos\n  }) => {\n    const isShow = currPos.y > -428; //height of banner!\n\n    if (isShow !== hideOnScroll) setHideOnScroll(isShow);\n  }, [hideOnScroll], false, false, 300);\n  const classes = useStyles();\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    className: hideOnScroll ? `${classes.navbar} + ${classes.hidden}` : `${classes.navbar}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: ethic_logo,\n    onClick: scrollToTop,\n    className: \"ethic-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/ainakin/Desktop/BLUEPRINT-ETHICS/Ethics-Project/frontend/src/Navbar.js"],"names":["React","useState","makeStyles","useScrollPosition","animateScroll","scroll","AppBar","Toolbar","useStyles","navbar","backgroundColor","hidden","display","scrollToTop","Navbar","hideOnScroll","setHideOnScroll","currPos","isShow","y","classes","ethic_logo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,cAAxC;;AAGA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAO,eAAP;AAIA,MAAMC,SAAS,GAAGN,UAAU,CAAC;AAC3BO,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE;AADX,GADmB;AAI3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AADH;AAJmB,CAAD,CAA5B;;AASA,SAASC,WAAT,GAAuB;AACrBR,EAAAA,MAAM,CAACQ,WAAP;AACD;;AAED,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,IAAD,CAAhD;AAEAE,EAAAA,iBAAiB,CACf,CAAC;AAAEc,IAAAA;AAAF,GAAD,KAAiB;AACf,UAAMC,MAAM,GAAGD,OAAO,CAACE,CAAR,GAAY,CAAC,GAA5B,CADe,CACkB;;AACjC,QAAID,MAAM,KAAKH,YAAf,EAA6BC,eAAe,CAACE,MAAD,CAAf;AAC9B,GAJc,EAKf,CAACH,YAAD,CALe,EAMf,KANe,EAOf,KAPe,EAQf,GARe,CAAjB;AAWA,QAAMK,OAAO,GAAGZ,SAAS,EAAzB;AACA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,SAAS,EACPO,YAAY,GACP,GAAEK,OAAO,CAACX,MAAO,MAAKW,OAAO,CAACT,MAAO,EAD9B,GAEP,GAAES,OAAO,CAACX,MAAO,EAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAEY,UADP;AAEE,IAAA,OAAO,EAAER,WAFX;AAGE,IAAA,SAAS,EAAC,YAHZ;AAIE,IAAA,GAAG,EAAC,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF;AAoBD","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\nimport { animateScroll as scroll } from \"react-scroll\";\n\nimport ethic_logo from \"./assets/ethic_logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport \"./navbar.scss\";\n\n\n\nconst useStyles = makeStyles({\n  navbar: {\n    backgroundColor: \"white\",\n  },\n  hidden: {\n    display: \"none\",\n  },\n});\n\nfunction scrollToTop() {\n  scroll.scrollToTop();\n}\n\nexport default function Navbar() {\n  const [hideOnScroll, setHideOnScroll] = useState(true);\n\n  useScrollPosition(\n    ({ currPos }) => {\n      const isShow = currPos.y > -428; //height of banner!\n      if (isShow !== hideOnScroll) setHideOnScroll(isShow);\n    },\n    [hideOnScroll],\n    false,\n    false,\n    300\n  );\n\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <AppBar\n        className={\n          hideOnScroll\n            ? `${classes.navbar} + ${classes.hidden}`\n            : `${classes.navbar}`\n        }\n      >\n        <Toolbar>\n          <img\n            src={ethic_logo}\n            onClick={scrollToTop}\n            className='ethic-logo'\n            alt='logo'\n          />\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}